name: Create Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
          token: ${{ secrets._GITHUB_TOKEN }}

    - name: Git pull
      run: git pull --prune

    - name: Get the latest tag
      id: latest_tag
      run: echo "::set-output name=tag::$(git describe --tags --abbrev=0)"

    - name: Calculate release tag
      id: calculate_tag
      run: |
        current_date=$(date +'%Y%m%d')
        tag_number=0
        tag_found=false
        
        while [ "$tag_found" != "true" ]; do
          current_tag="prod$current_date.$tag_number"
          
          if git rev-parse $current_tag >/dev/null 2>&1; then
            echo "$current_tag already exists."
            tag_number=$((tag_number + 1))
          else
            echo "Creating new tag $current_tag."
            echo "$current_tag" >> tag.txt
            tag_found=true
          fi
        done
      shell: bash

    - name: Read release tag
      id: read_tag
      run: echo "::set-output name=tag::$(cat tag.txt)"
      shell: bash

    - name: Create and push release tag
      run: |
        git tag ${{ steps.read_tag.outputs.tag }}
        git push --tags
      if: steps.read_tag.outputs.tag != ''
      env:
        GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: ''
        tag_name: ${{ steps.read_tag.outputs.tag }}
        title: Release ${{ steps.read_tag.outputs.tag }}
      env:
        GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}
